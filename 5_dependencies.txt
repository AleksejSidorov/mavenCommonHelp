        <dependency>
            <groupId></groupId>         -
            <artifactId></artifactId>   -
            <version></version>         -
            <scope></scope>             - место использования зависимости
            <systemPath></systemPath>	- используется, если jar лежит в определённом месте, не в репозитории
            <classifier></classifier>	
            <exclusions>		- исключение транзитивных зависимостей
                <exclusion>
                    <groupId></groupId>
                    <artifactId></artifactId>
                </exclusion>
	    </exclusions>   
            <type></type>		- тип зависимости. Не всегда бывает jar, к примеру может быть pom
            <optional></optional>	- true или false, указвает опциональность подключения зависимости
        </dependency>

scope:
	- compile  - зависимость необходимая сейчас
	- provided - зависимость будет предоставлена из другого источника(к примеру из Apache)
	- runtime  - зависимость использумая во время выполнения(к примеру драйвер для бд)
	- system
	- test     - зависимость используемая во время тестов

Транзитивные зависимости - зависисмости, которые тянутся вместе с основной зависимости. 
			При скачивании пакета либы, в ней может лежать свой POM, по которому
				вытянуться и транзитивные зависимости.
			Но, есть вероятность вытянуть одни и те же зависимости, но разных версий,
				и мы можем получить ошибку несовместимости версий.
			     Для избежаний данных конфликтов, если есть транзиктивные зависимости
				разных версий, то будет взята та версия, которая идёт выше по описанию POM. 
                	     Второе решение по умолчанию в GRADLE - берётся та зависисмость, которая
				выше по версии.
			     Третье решение - использование <exclusions>, в котором можно указать,
				какие зависимости не нужно тянуть вместе с основной

 <optional> - ставиться true, для того, что бы проект, которые будет тянуть наш проект в качестве зависимости, смог выбрать,
		а добавлять ли данную зависимость транзитивно или нет. Используется, если у нас две зависимости одного характера,
		но не все они нужны. К примеру одновременно драйвера для MySQL и PostgreSQL.
